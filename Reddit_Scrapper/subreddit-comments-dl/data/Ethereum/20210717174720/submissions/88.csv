id,created_utc,title,selftext,full_link,score,comments
hztlx2,1595994635,"""ETH1.0 blockchain will continue to operate in parallel"". ETH1 &amp; ETH2 = 2 coins?",[removed],https://www.reddit.com/r/ethereum/comments/hztlx2/eth10_blockchain_will_continue_to_operate_in/,1,0
hztmus,1595994746,"""ETH1.0 blockchain will continue to operate in parallel"". ETH1 &amp; ETH2 == 2 coins?",[removed],https://www.reddit.com/r/ethereum/comments/hztmus/eth10_blockchain_will_continue_to_operate_in/,1,0
hztqrt,1595995218,I somehow made a 1 ETH to 20 XOR trade in Uniswap,[removed],https://www.reddit.com/r/ethereum/comments/hztqrt/i_somehow_made_a_1_eth_to_20_xor_trade_in_uniswap/,1,0
hzu29y,1595996565,A couple of questions,[removed],https://www.reddit.com/r/ethereum/comments/hzu29y/a_couple_of_questions/,1,0
hzu2bi,1595996571,"I am onboard with Ethereum, but is this for real? A YouTube ad, seems sloppy.",,https://www.reddit.com/r/ethereum/comments/hzu2bi/i_am_onboard_with_ethereum_but_is_this_for_real_a/,1,0
hzu7d9,1595997181,Technical Question,[removed],https://www.reddit.com/r/ethereum/comments/hzu7d9/technical_question/,1,1
hzup77,1595999392,Dai Supply Surpasses 300 Million,,https://www.reddit.com/r/ethereum/comments/hzup77/dai_supply_surpasses_300_million/,1,1
hzvbwt,1596002402,Ethereum’s First ICO Blazes Trail To A World Without Bosses,,https://www.reddit.com/r/ethereum/comments/hzvbwt/ethereums_first_ico_blazes_trail_to_a_world/,1,0
hzvxem,1596005431,Today is the fifth birthday of Ethereum - The Cryptonomist,,https://www.reddit.com/r/ethereum/comments/hzvxem/today_is_the_fifth_birthday_of_ethereum_the/,1,0
hzw7hc,1596006855,Why Blockchain Interoperability is Important and How does it Work,,https://www.reddit.com/r/ethereum/comments/hzw7hc/why_blockchain_interoperability_is_important_and/,1,0
hzwfyk,1596008135,"Performance engineering: Lies, damned lies and (TPS)benchmarks",,https://www.reddit.com/r/ethereum/comments/hzwfyk/performance_engineering_lies_damned_lies_and/,1,0
hzwgnj,1596008237,Want to translate Medalla Eth 2 Launch Pad page,[removed],https://www.reddit.com/r/ethereum/comments/hzwgnj/want_to_translate_medalla_eth_2_launch_pad_page/,1,0
hzx23b,1596011513,Ledger (Company of the Hardware Wallet): Data Breach / Customer Data exposed! Caution!,[removed],https://www.reddit.com/r/ethereum/comments/hzx23b/ledger_company_of_the_hardware_wallet_data_breach/,1,1
hzx2dz,1596011556,"Ledger got hacked, misled people, dragged their feet with notification and put people at risk.",,https://www.reddit.com/r/ethereum/comments/hzx2dz/ledger_got_hacked_misled_people_dragged_their/,1,0
hzx43l,1596011799,How to Build a Real Time Streaming Cryptocurrency Dashboard in Excel in 5 Minutes,,https://www.reddit.com/r/ethereum/comments/hzx43l/how_to_build_a_real_time_streaming_cryptocurrency/,1,0
hzx7fj,1596012317,Century of Enslavement: The History of The Federal Reserve,[removed],https://www.reddit.com/r/ethereum/comments/hzx7fj/century_of_enslavement_the_history_of_the_federal/,1,0
hzxbdh,1596012928,A Protocol For Tokenized Margin Trading and Lending! That’s absolutely insane!,,https://www.reddit.com/r/ethereum/comments/hzxbdh/a_protocol_for_tokenized_margin_trading_and/,1,0
hzxd7j,1596013212,"Nobody - ""How can we make a betting site so overly complicated that no normal betting person would ever use it?"" ..... Augur v2 - ""I got you bro""",,https://www.reddit.com/r/ethereum/comments/hzxd7j/nobody_how_can_we_make_a_betting_site_so_overly/,1,1
hzxhxc,1596013924,Help me identify the platform or dapp in the picture or suggest similar ones? trying to essentially create a token product out of token raw materials and this seems helpful.,,https://www.reddit.com/r/ethereum/comments/hzxhxc/help_me_identify_the_platform_or_dapp_in_the/,1,0
hzxkkg,1596014331,Solidity 0.7.0 is out! v0.7.0 is a breaking release of the Solidity compiler &amp; language,,https://www.reddit.com/r/ethereum/comments/hzxkkg/solidity_070_is_out_v070_is_a_breaking_release_of/,1,15
hzyrgt,1596020641,Freedom vs Protection: Should Crypto Exchanges Be Able To Censor Transactions?,,https://www.reddit.com/r/ethereum/comments/hzyrgt/freedom_vs_protection_should_crypto_exchanges_be/,1,0
hzz7ff,1596022816,"TERNIO (who moved to Ethereum from Stellar) just launched Crypto Friendly, FDIC Insured Checking Accounts on their BlockCard.",[removed],https://www.reddit.com/r/ethereum/comments/hzz7ff/ternio_who_moved_to_ethereum_from_stellar_just/,1,5
hzzk6b,1596024444,Ivan on Tech sees a freshly minted whale 🥂. 2 minute clip.,,https://www.reddit.com/r/ethereum/comments/hzzk6b/ivan_on_tech_sees_a_freshly_minted_whale_2_minute/,1,0
i004z0,1596027011,"Rotki, the portfolio tracker/accounting tool that respects your privacy releases v1.6.1 with Aave support, ENS support and Ethereum DeFi overview",,https://www.reddit.com/r/ethereum/comments/i004z0/rotki_the_portfolio_trackeraccounting_tool_that/,1,1
i008xh,1596027479,Ethereum.org Translation Program: Milestone and Updates (30 Languages!),,https://www.reddit.com/r/ethereum/comments/i008xh/ethereumorg_translation_program_milestone_and/,1,0
i00aew,1596027653,"Add to your calendar Ethereum (ETH) event: ETH 2.0 Phase 0 - December 31, 2020",,https://www.reddit.com/r/ethereum/comments/i00aew/add_to_your_calendar_ethereum_eth_event_eth_20/,1,0
i00qrw,1596029479,BlockchainThings.io - Getting Started with Solidity Programming for Ethereum Part 2,,https://www.reddit.com/r/ethereum/comments/i00qrw/blockchainthingsio_getting_started_with_solidity/,1,0
i00v7l,1596029982,"Can't unwrap WETH, what's happening?",[removed],https://www.reddit.com/r/ethereum/comments/i00v7l/cant_unwrap_weth_whats_happening/,1,1
i01ieu,1596032441,Check it,,https://www.reddit.com/r/ethereum/comments/i01ieu/check_it/,1,0
i01kv7,1596032699,Reality Cards: the world’s first NFT-based prediction market. Open beta is on mainnet now.,,https://www.reddit.com/r/ethereum/comments/i01kv7/reality_cards_the_worlds_first_nftbased/,1,4
i01sjk,1596033483,StarkWare's Submission to Reddit's Scaling Bake-off 2020,[removed],https://www.reddit.com/r/ethereum/comments/i01sjk/starkwares_submission_to_reddits_scaling_bakeoff/,1,22
i023gf,1596034615,Dragonchain Great Reddit Scaling Bake-Off Public Proposal,"## Dragonchain Public Proposal TL;DR:\n\nDragonchain has demonstrated **twice Reddit’s entire total daily volume (votes, comments, and posts** [**per Reddit 2019 Year in Review**](https://redditblog.com/2019/12/04/reddits-2019-year-in-review/)**)** in a [24-hour demo](https://youtu.be/pSfBid1_US4) on an operational network.  Every single transaction on Dragonchain is decentralized immediately through 5 levels of Dragon Net, and then secured with combined proof on **Bitcoin**, **Ethereum**, **Ethereum Classic**, and **Binance Chain**, via Interchain. At the time, in January 2020, the entire cost of the demo was approximately $25K on a single system (transaction fees locked at $0.0001/txn). With current fees (lowest fee $0.0000025/txn), this would cost as little as $625.\n\nW**atch Joe walk through the entire proposal and answer questions on** [**YouTube**](https://youtu.be/RZHuqo_XOoQ)**.**\n\nThis proposal is also available on the [Dragonchain blog](https://dragonchain.com/blog/reddit-ethereum-blockchain-scalability).\n\n## Hello Reddit and Ethereum community!\n\nI’m Joe Roets, Founder &amp; CEO of Dragonchain. When the team and I first heard about The Great Reddit Scaling Bake-Off we were intrigued. We believe we have the solutions Reddit seeks for its community points system and we have them at scale.\n\nFor your consideration, we have submitted our proposal below. The team at Dragonchain and I welcome and look forward to your technical questions, philosophical feedback, and fair criticism, to build a scaling solution for Reddit that will empower its users. Because our architecture is unlike other blockchain platforms out there today, we expect to receive many questions while people try to grasp our project. I will  answer all questions here in this thread on Reddit, and I've answered some questions in the stream on YouTube.\n\nWe have seen good discussions so far in the competition. We hope that Reddit’s scaling solution will emerge from The Great Reddit Scaling Bake-Off and that Reddit will have great success with the implementation.\n\n## Executive summary\n\nDragonchain is a robust open source hybrid blockchain platform that has proven to withstand the passing of time since our inception in 2014. We have continued to evolve to harness the scalability of private nodes, yet take full advantage of the security of public decentralized networks, like Ethereum. We have a live, operational, and fully functional Interchain network integrating Bitcoin, Ethereum, Ethereum Classic, and \~700 independent Dragonchain nodes. Every transaction is secured to Ethereum, Bitcoin, and Ethereum Classic. Transactions are immediately usable on chain, and the first decentralization is seen within 20 seconds on Dragon Net. Security increases further to public networks ETH, BTC, and ETC within 10 minutes to 2 hours. Smart contracts can be written in any executable language, offering full freedom to existing developers. We invite any developer to watch the demo, play with our SDK’s, review open source code, and to help us move forward. Dragonchain specializes in scalable loyalty &amp; rewards solutions and has built a decentralized social network on chain, with very affordable transaction costs. This experience can be combined with the insights Reddit and the Ethereum community have gained in the past couple of months to roll out the solution at a rapid pace.\n\n## Response and PoC\n\nIn *The Great Reddit Scaling Bake-Off* post, Reddit has asked for a series of demonstrations, requirements, and other considerations. In this section, we will attempt to answer all of these requests.\n\n## Live Demo\n\n&gt;A live proof of concept showing hundreds of thousands of transactions\n\nOn Jan 7, 2020, Dragonchain hosted a 24-hour live demonstration during which a quarter of a billion (250 million+) transactions executed fully on an operational network. **Every single transaction** on Dragonchain is decentralized immediately through 5 levels of Dragon Net, and then secured with **combined proof** on **Bitcoin**, **Ethereum**, **Ethereum Classic**, and **Binance Chain**, via Interchain. This means that every single transaction is secured by, and traceable to these networks. An attack on this system would require a simultaneous attack on all of the Interchained networks.\n\n24 hours in 4 minutes ([YouTube](https://youtu.be/pSfBid1_US4)):\n\n![video](pf6glgi52td51 ""24 hours in 4 minutes"")\n\nThe demonstration was of a single business system, and any user is able to scale this further, by running multiple systems simultaneously. Our goals for the event were to demonstrate a consistent capacity greater than that of Visa over an extended time period.\n\nTooling to reproduce our demo is available here:\n\n[https://github.com/dragonchain/spirit-bomb](https://github.com/dragonchain/spirit-bomb)\n\n## Source Code\n\n&gt;Source code (for on &amp; off-chain components as well tooling used for the PoC). The source code does not have to be shared publicly, but if Reddit decides to use a particular solution it will need to be shared with Reddit at some point.\n\n* [Dragonchain Core](https://github.com/dragonchain/dragonchain)\n* [Tooling for demonstration](https://github.com/dragonchain/spirit-bomb)\n* [Dragonchain Github](https://github.com/dragonchain/)\n\n## Scaling\n\n&gt;How it works &amp; scales\n\n## Architectural Scaling\n\nDragonchain’s architecture attacks the scalability issue from multiple angles. Dragonchain is a hybrid blockchain platform, wherein every transaction is protected on a business node to the requirements of that business or purpose. A business node may be held completely private or may be exposed or replicated to any level of exposure desired.\n\nEvery node has its own blockchain and is independently scalable. Dragonchain established *Context Based Verification* as its consensus model. Every transaction is immediately usable on a trust basis, and in time is provable to an increasing level of decentralized consensus. A transaction will have a level of decentralization to independently owned and deployed Dragonchain nodes (\~700 nodes) within seconds, and full decentralization to BTC and ETH within minutes or hours. Level 5 nodes (Interchain nodes) function to secure all transactions to public or otherwise external chains such as Bitcoin and Ethereum. These nodes scale the system by aggregating multiple blocks into a single Interchain transaction on a cadence. This timing is configurable based upon average fees for each respective chain. For detailed information about Dragonchain’s architecture, and *Context Based Verification*, please refer to the [Dragonchain Architecture Document](https://dragonchain.com/Dragonchain-Architecture.pdf).\n\n## Economic Scaling\n\nAn interesting feature of Dragonchain’s network consensus is its economics and scarcity model. Since Dragon Net nodes (L2-L4) are independent staking nodes, deployment to cloud platforms would allow any of these nodes to scale to take on a large percentage of the verification work. This is great for scalability, but not good for the economy, because there is no scarcity, and pricing would develop a downward spiral and result in fewer verification nodes. For this reason, Dragonchain uses TIME as scarcity.\n\nTIME is calculated as the number of Dragons held, multiplied by the number of days held. TIME influences the user’s access to features within the Dragonchain ecosystem. It takes into account both the Dragon balance and length of time each Dragon is held. TIME is staked by users against every verification node and dictates how much of the transaction fees are awarded to each participating node for every block.\n\nTIME also dictates the transaction fee itself for the business node. TIME is staked against a business node to set a **deterministic transaction fee** level (see transaction fee table below in Cost section). This is very interesting in a discussion about scaling because it guarantees independence for business implementation. No matter how much traffic appears on the entire network, a business is guaranteed to not see an increased transaction fee rate.\n\n## Scaled Deployment\n\nDragonchain uses Docker and Kubernetes to allow the use of best practices traditional system scaling. Dragonchain offers *managed nodes* with an easy to use web based console interface. The user may also deploy a Dragonchain node within their own datacenter or favorite cloud platform. Users have deployed Dragonchain nodes on-prem on Amazon AWS, Google Cloud, MS Azure, and other hosting platforms around the world. Any executable code, anything you can write, can be written into a smart contract. This flexibility is what allows us to say that developers with no blockchain experience can use any code language to access the benefits of blockchain. Customers have used NodeJS, Python, Java, and even BASH shell script to write smart contracts on Dragonchain.\n\nWith Docker containers, we achieve better separation of concerns, faster deployment, higher reliability, and lower response times.\n\nWe chose Kubernetes for its self-healing features, ability to run multiple services on one server, and its large and thriving development community. It is resilient, scalable, and automated. OpenFaaS allows us to package smart contracts as Docker images for easy deployment.\n\nContract deployment time is now bounded only by the size of the Docker image being deployed but remains fast even for reasonably large images. We also take advantage of Docker’s flexibility and its ability to support any language that can run on x86 architecture. Any image, public or private, can be run as a smart contract using Dragonchain.\n\n## Flexibility in Scaling\n\nDragonchain’s architecture considers interoperability and integration as key features. From inception, we had a goal to increase adoption via integration with real business use cases and traditional systems.\n\nWe envision the ability for Reddit, in the future, to be able to integrate alternate content storage platforms or other financial services along with the token.\n\n* **LBRY** \- To allow users to deploy content natively to LBRY\n* **MakerDAO** to allow users to lend small amounts backed by their Reddit community points.\n* **STORJ/SIA** to allow decentralized on chain storage of portions of content. These integrations or any other are relatively easy to integrate on Dragonchain with an Interchain implementation.\n\n## Cost\n\n&gt;Cost estimates (on-chain and off-chain) For the purpose of this proposal, we assume that all transactions are on chain (posts, replies, and votes).\n\nOn the Dragonchain network, transaction costs are deterministic/predictable. By staking TIME on the business node (as described above) Reddit can reduce transaction costs to as low as $0.0000025 per transaction.\n\n![img](pwpbuvgg3td51 ""Dragonchain Fees Table"")\n\n## Getting Started\n\n&gt;How to run it\n\nBuilding on Dragonchain is simple and requires no blockchain experience. Spin up a business node (L1) in our managed environment (AWS), run it in your own cloud environment, or on-prem in your own datacenter. Clear documentation will walk you through the steps of spinning up your first Dragonchain Level 1 Business node.\n\nGetting started is easy...\n\n1. Download Dragonchain’s dctl\n2. Input three commands into a terminal\n3. Build an image\n4. Run it\n\nMore information can be found in our Get started documents.\n\n* [Quickstart](https://docs.dragonchain.com/docs/quickstart.html)\n* [Full Documentation](https://docs.dragonchain.com/)\n\n&amp;#x200B;\n\n&gt;Architecture\n\nDragonchain is an open source hybrid platform. Through Dragon Net, each chain combines the power of a public blockchain (like Ethereum) with the privacy of a private blockchain.\n\nDragonchain organizes its network into five separate levels. A Level 1, or business node, is a totally private blockchain only accessible through the use of public/private keypairs. All business logic, including smart contracts, can be executed on this node directly and added to the chain.\n\nAfter creating a block, the Level 1 business node broadcasts a version stripped of sensitive private data to Dragon Net. Three Level 2 Validating nodes validate the transaction based on guidelines determined from the business. A Level 3 Diversity node checks that the level 2 nodes are from a diverse array of locations. A Level 4 Notary node, hosted by a KYC partner, then signs the validation record received from the Level 3 node. The transaction hash is ledgered to the Level 5 public chain to take advantage of the hash power of massive public networks.\n\nDragon Net can be thought of as a “blockchain of blockchains”, where every level is a complete private blockchain. Because an L1 can send to multiple nodes on a single level, proof of existence is distributed among many places in the network. Eventually, proof of existence reaches level 5 and is published on a public network.\n\n* [Dragonchain architecture](https://dragonchain.com/Dragonchain-Architecture.pdf)\n* [Dragon Net easy to consume 2018 Infographic](https://dragonchaincom.cdn.prismic.io/dragonchaincom/05325e8c8f745c307834bef00ecfa3eb49231114_unlimited-blockchain-scalability-infographic.jpeg)\n\n## API Documentation\n\n&gt;APIs (on chain &amp; off)\n\n* [Python SDK](https://python-sdk-docs.dragonchain.com/latest/)\n* [NodeJS/Javascript SDK](https://python-sdk-docs.dragonchain.com/latest/)\n* [Go SDK](https://godoc.org/github.com/dragonchain/dragonchain-sdk-go)\n* [DCTL Package](https://www.npmjs.com/package/dctl)\n* [API References](https://docs.dragonchain.com/docs/api-reference.html)\n* [RESTful API](https://node-sdk-docs.dragonchain.com/latest/classes/dragonchainclient.html)\n\n## SDK Source\n\n* [https://github.com/dragonchain/dragonchain-sdk-python](https://github.com/dragonchain/dragonchain-sdk-python)\n* [https://github.com/dragonchain/dragonchain-sdk-javascript](https://github.com/dragonchain/dragonchain-sdk-javascript)\n* [https://github.com/dragonchain/dragonchain-sdk-go](https://github.com/dragonchain/dragonchain-sdk-go)\n* [https://github.com/dragonchain/dragonchain-sdk-dart](https://github.com/dragonchain/dragonchain-sdk-dart)\n\n## Nobody’s Perfect\n\n&gt;Known issues or tradeoffs\n\n* Dragonchain is open source and even though the platform is easy enough for developers to code in any language they are comfortable with, we do not have so large a developer community as Ethereum. We would like to see the Ethereum developer community (and any other communities) become familiar with our SDK’s, our solutions, and our platform, to unlock the full potential of our Ethereum Interchain. Long ago we decided to prioritize both Bitcoin and Ethereum Interchains. We envision an ecosystem that encompasses different projects to give developers the ability to take full advantage of all the opportunities blockchain offers to create decentralized solutions not only for Reddit but for all of our current platforms and systems. We believe that together we will take the adoption of blockchain further. We currently have additional Interchain with Ethereum Classic. We look forward to Interchain with other blockchains in the future. We invite all blockchains projects who believe in decentralization and security to Interchain with Dragonchain.\n* While we only have 700 nodes compared to 8,000 Ethereum and 10,000 Bitcoin nodes. We harness those 18,000 nodes to scale to extremely high levels of security. See [Dragonchain metrics](https://metrics.dragonchain.com).\n* Some may consider the centralization of Dragonchain’s business nodes as an issue at first glance, however, the model is by design to protect business data. We do not consider this a drawback as these nodes can make any, none, or all data public. Depending upon the implementation, **every subreddit could have control of its own business node**, for potential business and enterprise offerings, bringing **new alternative revenue streams to Reddit**.\n\n## Costs and resources\n\n&gt;Summary of cost &amp; resource information for both on-chain &amp; off-chain components used in the PoC, as well as cost &amp; resource estimates for further scaling. If your PoC is not on mainnet, make note of any mainnet caveats (such as congestion issues).\n\nEvery transaction on the PoC system had a transaction fee of $0.0001 (one-hundredth of a cent USD). At 256MM transactions, the demo cost $25,600. With current operational fees, the same demonstration would cost $640 USD.\n\nFor the demonstration, to achieve throughput to mimic a worldwide payments network, we modeled several clients in AWS and 4-5 business nodes to handle the traffic. The business nodes were tuned to handle higher throughput by adjusting memory and machine footprint on AWS. This flexibility is valuable to implementing a system such as envisioned by Reddit. Given that Reddit’s daily traffic (posts, replies, and votes) is less than half that of our demo, we would expect that the entire Reddit system could be handled on 2-5 business nodes using right-sized containers on AWS or similar environments.\n\nVerification was accomplished on the operational Dragon Net network with over 700 independently owned verification nodes running around the world at no cost to the business other than paid transaction fees.\n\n## Requirements\n\n## Scaling\n\n&gt;This PoC should scale to the numbers below with minimal costs (both on &amp; off-chain). There should also be a clear path to supporting hundreds of millions of users.  \n&gt;  \n&gt;Over a 5 day period, your scaling PoC should be able to handle:  \n&gt;  \n&gt;\*100,000 point claims (minting &amp; distributing points) \*25,000 subscriptions \*75,000 one-off points burning \*100,000 transfers\n\nDuring Dragonchain’s 24 hour demo, the above required numbers were reached within the first few minutes.\n\nReddit’s total activity is 9000% more than Ethereum’s total transaction level. Even if you do not include votes, it is still 700% more than Ethereum’s current volume. Dragonchain has demonstrated that it can handle 250 million transactions a day, and it’s architecture allows for multiple systems to work at that level simultaneously. In our PoC, we demonstrate double the full capacity of Reddit, and every transaction was proven all the way to Bitcoin and Ethereum.\n\n![img](k9itp7es3td51 ""Reddit Scaling on Ethereum"")\n\n## Decentralization\n\n&gt;Solutions should not depend on any single third-party provider. We prefer solutions that do not depend on specific entities such as Reddit or another provider, and solutions with no single point of control or failure in off-chain components but recognize there are numerous trade-offs to consider\n\nDragonchain’s architecture calls for a hybrid approach. Private business nodes hold the sensitive data while the validation and verification of transactions for the business are decentralized within seconds and secured to public blockchains within 10 minutes to 2 hours. Nodes could potentially be controlled by owners of individual subreddits for more organic decentralization.\n\n* Billing is currently centralized - there is a path to federation and decentralization of a scaled billing solution.\n* Operational multi-cloud\n* Operational on-premises capabilities\n* Operational deployment to any datacenter\n* Over 700 independent Community Verification Nodes with proof of ownership\n* Operational Interchain (Interoperable to Bitcoin, Ethereum, and Ethereum Classic, open to more)\n\n## Usability Scaling solutions should have a simple end user experience.\n\n&gt;Users shouldn't have to maintain any extra state/proofs, regularly monitor activity, keep track of extra keys, or sign anything other than their normal transactions\n\nDragonchain and its customers have demonstrated extraordinary usability as a feature in many applications, where users do not need to know that the system is backed by a live blockchain. Lyceum is one of these examples, where the progress of academy courses is being tracked, and successful completion of courses is rewarded with certificates on chain. Our @Save\_The\_Tweet bot is popular on Twitter. When used with one of the following hashtags - #please, #blockchain, #ThankYou, or #eternalize the tweet is saved through Eternal to multiple blockchains. A proof report is available for future reference. Other examples in use are DEN, our decentralized social media platform, and our console, where users can track their node rewards, view their TIME, and operate a business node.\n\nExamples:\n\n* [Den social media](https://den.social)\n* [Eternal &amp; Save The Tweet bot](https://twitter.com/save_the_tweet?s=21)\n* [Lyceum/Academy](https://academy.dragonchain.org)\n\n&amp;#x200B;\n\n&gt;Transactions complete in a reasonable amount of time (seconds or minutes, not hours or days)\n\nAll transactions are **immediately usable** on chain by the system. A transaction begins the path to decentralization at the conclusion of a 5-second block when it gets distributed across 5 separate community run nodes. Full decentralization occurs within 10 minutes to 2 hours depending on which interchain (Bitcoin, Ethereum, or Ethereum Classic) the transaction hits first. Within approximately 2 hours, the combined hash power of all interchained blockchains secures the transaction.\n\n&amp;#x200B;\n\n&gt;Free to use for end users (no gas fees, or fixed/minimal fees that Reddit can pay on their behalf)\n\nWith transaction pricing as low as $0.0000025 per transaction, it may be considered reasonable for Reddit to cover transaction fees for users.\n\n![img](p9tmb6i04td51 ""All of Reddit's Transactions on Blockchain (month)"")\n\nCommunity points can be earned by users and distributed directly to their Reddit account in batch (as per Reddit minting plan), and allow users to withdraw rewards to their Ethereum wallet whenever they wish. Withdrawal fees can be paid by either user or Reddit. This model has been operating inside the Dragonchain system since 2018, and many security and financial compliance features can be optionally added. We feel that this capability greatly enhances user experience because it is seamless to a regular user without cryptocurrency experience, yet flexible to a tech savvy user. With regard to currency or token transactions, these would occur on the Reddit network, verified to BTC and ETH. These transactions would incur the $0.0000025 transaction fee. To estimate this fee we use the monthly active Reddit users [statista](https://www.statista.com/statistics/443332/reddit-monthly-visitors/) with a 60% adoption rate and an estimated 10 transactions per month average resulting in an approximate $720 cost across the system. Reddit could feasibly incur all associated *internal* network charges (mining/minting, transfer, burn) as these are very low and controllable fees.\n\n![img](cbnnso9a4td51 ""Reddit Internal Token Transaction Fees"")\n\n&amp;#x200B;\n\n![img](5vrfq1nf4td51 ""Reddit Ethereum Token Transaction Fees"")\n\nWhen we consider further the Ethereum fees that might be incurred, we have a few choices for a solution.\n\n1. Offload all Ethereum transaction fees (user withdrawals) to interested users as they wish to withdraw tokens for external use or sale.\n2. Cover Ethereum transaction fees by aggregating them on a timed schedule. Users would request withdrawal (from Reddit or individual subreddits), and they would be transacted on the Ethereum network every hour (or some other schedule).\n3. In a combination of the above, customers could cover aggregated fees.\n4. Integrate with alternate Ethereum roll up solutions or other proposals to aggregate minting and distribution transactions onto Ethereum.\n\n## Bonus Points\n\n&gt;Users should be able to view their balances &amp; transactions via a blockchain explorer-style interface\n\nFrom interfaces for users who have no knowledge of blockchain technology to users who are well versed in blockchain terms such as those present in a typical block explorer, a system powered by Dragonchain has flexibility on how to provide balances and transaction data to users. Transactions can be made viewable in an Eternal Proof Report, which displays raw data along with TIME staking information and traceability all the way to Bitcoin, Ethereum, and every other Interchained network. The report shows fields such as transaction ID, timestamp, block ID, multiple verifications, and Interchain proof. [See example here](https://eternal.dragonchain.com/transaction/c26fa966-1ae1-43d3-854b-5cf9c6ee0cd2).\n\nNode payouts within the Dragonchain console are listed in chronological order and can be further seen in either Dragons or USD. [See example here](https://imgur.com/gallery/NbzS9bU).\n\nIn our social media platform, Dragon Den, users can see, in real-time, their NRG and MTR balances. [See example here.](https://imgur.com/gallery/580spr1)\n\nA new influencer app powered by Dragonchain, Raiinmaker, breaks down data into a user friendly interface that shows coin portfolio, redeemed rewards, and social scores per campaign. [See example here.](https://imgur.com/gallery/7NdOSKu)\n\n&amp;#x200B;\n\n&gt;Exiting is fast &amp; simple\n\nWithdrawing funds on Dragonchain’s console requires three clicks, however, withdrawal scenarios with more enhanced security features per Reddit’s discretion are obtainable.\n\n&amp;#x200B;\n\n&gt;Interoperability Compatibility with third party apps (wallets/contracts/etc) is necessary.\n\nProven interoperability at scale that surpasses the required specifications. Our entire platform consists of interoperable blockchains connected to each other and traditional systems. APIs are well documented. Third party permissions are possible with a simple smart contract without the end user being aware. No need to learn any specialized proprietary language. Any code base (not subsets) is usable within a Docker container. Interoperable with any blockchain or traditional APIs. We’ve witnessed relatively complex systems built by engineers with no blockchain or cryptocurrency experience. We’ve also demonstrated the creation of smart contracts within minutes built with BASH shell and Node.js. Please see our source code and API documentation.\n\n&amp;#x200B;\n\n&gt;Scaling solutions should be extensible and allow third parties to build on top of it Open source and extensible  \n&gt;  \n&gt;APIs should be well documented and stable\n\n* [Python SDK](https://python-sdk-docs.dragonchain.com/latest/)\n* [NodeJS/Javascript SDK](https://python-sdk-docs.dragonchain.com/latest/)\n* [Go SDK](https://godoc.org/github.com/dragonchain/dragonchain-sdk-go)\n* [DCTL Package](https://www.npmjs.com/package/dctl)\n* [API References](https://docs.dragonchain.com/docs/api-reference.html)\n* [RESTful API](https://node-sdk-docs.dragonchain.com/latest/classes/dragonchainclient.html)\n\n&amp;#x200B;\n\n&gt;Documentation should be clear and complete\n\nFor full documentation, explore our docs, SDK’s, Github repo’s, architecture documents, original Disney documentation, and other links or resources provided in this proposal.\n\n* [Github](https://github.com/dragonchain/dragonchain)\n* [Architecture](https://dragonchain.com/Dragonchain-Architecture.pdf)\n* [Disney Use Cases](https://dragonchain.org/static/use-cases.pdf)\n* [Den social media](https://den.social)\n* [Dragon Den Blue Paper](https://docs.google.com/presentation/d/1HV0eirU2anJaJGSJLGQiibLDY4s1J4R7piYbMXIgU0I/)\n* [Core documentation](https://dragonchain-core-docs.dragonchain.com/latest/index.html)\n* [Javascript SDK](https://github.com/dragonchain/dragonchain-sdk-javascript)\n* [Python SDK](https://github.com/dragonchain/dragonchain-sdk-python)\n* [Go SDK](https://github.com/dragonchain/dragonchain-sdk-go)\n* [Dart SDK](https://github.com/dragonchain/dragonchain-sdk-dart)\n* [User friendly console](https://console.dragonchain.com/)\n* [TIME](https://dragonchain.com/community/time)\n* [Academy](https://academy.dragonchain.org)\n* [Dragonchain Wikipedia](https://en.wikipedia.org/wiki/Dragonchain)\n\n&amp;#x200B;\n\n&gt;Third-party permissionless integrations should be possible &amp; straightforward Smart contracts are Docker based, can be written in any language, use full language (not subsets), and can therefore be integrated with any system including traditional system APIs. Simple is better. Learning an uncommon or proprietary language should not be necessary.\n\nAdvanced knowledge of mathematics, cryptography, or L2 scaling should not be required. Compatibility with common utilities &amp; toolchains is expected.\n\nDragonchain business nodes and smart contracts leverage Docker to allow the use of literally any language or executable code. No proprietary language is necessary. We’ve witnessed relatively complex systems built by engineers with no blockchain or cryptocurrency experience. We’ve also demonstrated the creation of smart contracts within minutes built with BASH shell and Node.js.\n\n# Bonus\n\n&gt;Bonus Points: Show us how it works. Do you have an idea for a cool new use case for Community Points? Build it!\n\n## TIME\n\nCommunity points could be awarded to Reddit users based upon TIME too, whereas the longer someone is part of a subreddit, the more community points someone naturally gained, even if not actively commenting or sharing new posts. A daily login could be required for these community points to be credited. This grants awards to readers too and incentivizes readers to create an account on Reddit if they browse the website often. This concept could also be leveraged to provide some level of reputation based upon duration and consistency of contribution to a community subreddit.\n\n* [TIME](https://dragonchain.com/community/time)\n* [Learn more about TIME and how to apply this to your nodes](https://dragonchain.com/blog/pooled-nodes-apply-time)\n\n## Dragon Den\n\nDragonchain has already built a social media platform that harnesses community involvement. Dragon Den is a decentralized community built on the Dragonchain blockchain platform. Dragon Den is Dragonchain’s answer to fake news, trolling, and censorship. It incentivizes the creation and evaluation of quality content within communities. It could be described as being a shareholder of a subreddit or Reddit in its entirety. The more your subreddit is thriving, the more rewarding it will be. Den is currently in a public beta and in active development, though the real token economy is not live yet. There are different tokens for various purposes. Two tokens are Lair Ownership Rights (LOR) and Lair Ownership Tokens (LOT).  LOT is a non-fungible token for ownership of a specific Lair. LOT will only be created and converted from LOR.\n\nEnergy (NRG) and Matter (MTR) work jointly. Your MTR determines how much NRG you receive in a 24-hour period. Providing quality content, or evaluating content will earn MTR.\n\n* [Dragon Den Blue Paper](https://docs.google.com/presentation/d/1HV0eirU2anJaJGSJLGQiibLDY4s1J4R7piYbMXIgU0I/)\n* [Den social media](https://den.social)\n\n&amp;#x200B;\n\n&gt;Security. Users have full ownership &amp; control of their points.\n\nAll community points awarded based upon any type of activity or gift, are secured and provable to all Interchain networks (currently BTC, ETH, ETC). Users are free to spend and withdraw their points as they please, depending on the features Reddit wants to bring into production.\n\n&amp;#x200B;\n\n&gt;Balances and transactions cannot be forged, manipulated, or blocked by Reddit or anyone else\n\nUsers can withdraw their balance to their ERC20 wallet, directly through Reddit. Reddit can cover the fees on their behalf, or the user covers this with a portion of their balance.\n\n&amp;#x200B;\n\n&gt;Users should own their points and be able to get on-chain ERC20 tokens without permission from anyone else\n\nThrough our console users can withdraw their ERC20 rewards. This can be achieved on Reddit too. Here is a walkthrough of our console, though this does not show the quick withdrawal functionality, a user can withdraw at any time. [https://www.youtube.com/watch?v=aNlTMxnfVHw](https://www.youtube.com/watch?v=aNlTMxnfVHw)\n\n&amp;#x200B;\n\n&gt;Points should be recoverable to on-chain ERC20 tokens even if all third-parties involved go offline\n\nIf necessary, signed transactions from the Reddit system (e.g. Reddit + Subreddit) can be sent to the Ethereum smart contract for minting.\n\n&amp;#x200B;\n\n&gt;A public, third-party review attesting to the soundness of the design should be available\n\nTo our knowledge, at least two large corporations, including a top 3 accounting firm, have conducted positive reviews. These reviews have never been made public, as Dragonchain did not pay or contract for these studies to be released.\n\n&amp;#x200B;\n\n&gt;Bonus points  \n&gt;  \n&gt;Public, third-party implementation review available or in progress\n\nSee above\n\n&amp;#x200B;\n\n&gt;Compatibility with HSMs &amp; hardware wallets\n\nFor the purpose of this proposal, all tokenization would be on the Ethereum network using standard token contracts and as such, would be able to leverage all hardware wallet and Ethereum ecosystem services.\n\n## Other Considerations\n\n&gt;Minting/distributing tokens is not performed by Reddit directly\n\nThis operation can be automated by smart contract on Ethereum. Subreddits can if desired have a role to play.\n\n&amp;#x200B;\n\n&gt;One off point burning, as well as recurring, non-interactive point burning (for subreddit memberships) should be possible and scalable\n\nThis is possible and scalable with interaction between Dragonchain Reddit system and Ethereum token contract(s).\n\n&amp;#x200B;\n\n&gt;Fully open-source solutions are strongly preferred\n\nDragonchain is fully open source (see section on Disney release after conclusion).\n\n## Conclusion\n\nWhether it is today, or in the future, we would like to work together to bring secure flexibility to the highest standards. It is our hope to be considered by Ethereum, Reddit, and other integrative solutions so we may further discuss the possibilities of implementation. In our public demonstration, 256 million transactions were handled in our operational network on chain in 24 hours, for the low cost of $25K, which if run today would cost $625. Dragonchain’s interoperable foundation provides the atmosphere necessary to implement a frictionless community points system. Thank you for your consideration of our proposal. We look forward to working with the community to make something great!\n\n## Disney Releases Blockchain Platform as Open Source\n\nThe team at Disney created the Disney Private Blockchain Platform. The system was a hybrid interoperable blockchain platform for ledgering and smart contract development geared toward solving problems with blockchain adoption and usability. All objective evaluation would consider the team’s output a success. We released a list of use cases that we explored in some capacity at Disney, and our input on blockchain standardization as part of our participation in the W3C Blockchain Community Group.\n\n[https://lists.w3.org/Archives/Public/public-blockchain/2016May/0052.html](https://lists.w3.org/Archives/Public/public-blockchain/2016May/0052.html)\n\n## Open Source\n\nIn 2016, Roets proposed to release the platform as open source to spread the technology outside of Disney, as others within the W3C group were interested in the solutions that had been created inside of Disney.\n\nFollowing a long process, step by step, the team met requirements for release. Among the requirements, the team had to:\n\n* Obtain VP support and approval for the release\n* Verify ownership of the software to be released\n* Verify that no proprietary content would be released\n* Convince the organization that there was a value to the open source community\n* Convince the organization that there was a value to Disney\n* Offer the plan for ongoing maintenance of the project outside of Disney\n* Itemize competing projects\n* Verify no conflict of interest\n* Preferred license\n* Change the project name to not use the name Disney, any Disney character, or any other associated IP - proposed Dragonchain - approved\n* Obtain legal approval\n* Approval from corporate, parks, and other business units\n* Approval from multiple Disney patent groups Copyright holder defined by Disney (Disney Connected and Advanced Technologies)\n* Trademark searches conducted for the selected name Dragonchain\n* Obtain IT security approval\n* Manual review of OSS components conducted\n* OWASP Dependency and Vulnerability Check Conducted\n* Obtain technical (software) approval\n* Offer management, process, and financial plans for the maintenance of the project.\n* Meet list of items to be addressed before release\n* Remove all Disney project references and scripts\n* Create a public distribution list for email communications\n* Remove Roets’ direct and internal contact information\n* Create public Slack channel and move from Disney slack channels\n* Create proper labels for issue tracking\n* Rename internal private Github repository\n* Add informative description to Github page\n* Expand README.md with more specific information\n* Add information beyond current “Blockchains are Magic”\n* Add getting started sections and info on cloning/forking the project\n* Add installation details\n* Add uninstall process\n* Add unit, functional, and integration test information\n* Detail how to contribute and get involved\n* Describe the git workflow that the project will use\n* Move to public, non-Disney git repository (Github or Bitbucket)\n* Obtain Disney Open Source Committee approval for release\n\nOn top of meeting the above criteria, as part of the process, the maintainer of the project had to receive the codebase on their own personal email and create accounts for maintenance (e.g. Github) with non-Disney accounts. Given the fact that the project spanned multiple business units, Roets was individually responsible for its ongoing maintenance. Because of this, he proposed in the open source application to create a non-profit organization to hold the IP and maintain the project. This was approved by Disney.\n\nThe Disney Open Source Committee approved the application known as OSSRELEASE-10, and the code was released on October 2, 2016. Disney decided to not issue a press release.\n\n[Original OSSRELASE-10 document](https://drive.google.com/file/d/0B75xk9GN3p0MNnE3RnU4UWtPMHdUTVVNTVJDUGkycXhycndr/view?usp=sharing)\n\n## Dragonchain Foundation\n\nThe Dragonchain Foundation was created on January 17, 2017. [https://den.social/l/Dragonchain/24130078352e485d96d2125082151cf0/dragonchain-and-disney/](https://den.social/l/Dragonchain/24130078352e485d96d2125082151cf0/dragonchain-and-disney/)",https://www.reddit.com/r/ethereum/comments/i023gf/dragonchain_great_reddit_scaling_bakeoff_public/,1,215
i02b77,1596035374,Kleros Launches Bounty Reward Program to Incentivize Market Creation on Omen,,https://www.reddit.com/r/ethereum/comments/i02b77/kleros_launches_bounty_reward_program_to/,1,0
i02gxy,1596035952,How is Algorand going to beat ETH?,,https://www.reddit.com/r/ethereum/comments/i02gxy/how_is_algorand_going_to_beat_eth/,1,0
i02mvb,1596036555,StarkWare's Submission to the Great Reddit Scaling Bake-off 2020,"# Dear Reddit,\n\nThis is our submission to The Great Reddit Scaling Bake-off. It’s a StarkEx Rollup (data on-chain).\n\nSincerely,\n\n[StarkWare](https://www.reddit.com/r/StarkWare/) \n\n# TL;DR\n\n*Processing img ud9rl7g1btd51...*\n\n# Show &amp; Tell\n\n*Processing video czb37jn5btd51...*\n\n# Our Deck\n\nsee [here](https://drive.google.com/file/d/120SrGwuthJAAVofNjQGIXTk9g0gX40tB/view?usp=sharing)\n\n# Detailed Description\n\n## Table of Contents\n\n**StarkEx — General**\n\n* System Overview\n* Product Documentation\n\n**StarkEx — the Reddit Bake-off**\n\n* Cost Analysis\n* System Architecture\n* Code\n\n# System Overview\n\n&amp;#x200B;\n\n*Processing img sq5i6kczbtd51...*\n\nThe StarkEx engine has on-chain and off-chain components. Generally speaking, off-chain is for heavy-duty computation and storage, while on-chain is for the computationally-lean verification , state commitment, and data-availability required for using the escape hatch.\n\nFor a more detailed overview read our [medium post](https://medium.com/starkware/starks-over-mainnet-b83e63db04c0). Note, however, that this post describes StarkEx in Validium mode (off-chain data), whereas in this bake-off we demonstrated StarkEx in Rollup mode (on-chain data).\n\n  \nA note on terminology: Rollups using cryptographic proofs are often called “ZK-Rollups” even when the proofs are not Zero-Knowldge (ZK); we shall use this common term when referring to the general class of proof-based Rollups.\n\n# Product Documentation\n\nSee [here](https://starkware.co/starkex/docs/).\n\n# StarkEx Demo for the Reddit Bake-off\n\n## Cost Analysis\n\n**TL;DR**\n\n* StarkEx can operate with either on-chain data (Rollup mode) or off-chain data (Validium mode).\n* In this bake-off, we operated in **Rollup mode**. Our total Mainnet on-chain gas cost was 94.47M gas, which translates to an average of **315 gas per Tx**. The off-chain costs were a small fraction of this. These are actual measured Mainnet costs, not optimistic estimates.\n* Running the bake-off in **Validium mode** would have cost 5M gas total, which is **under 17 gas per Tx**. StarkWare already has a StarkEx system in Validium mode deployed on Mainnet.\n* StarkEx outperforms other Rollup solutions\n* It outperforms existing ZK-Rollups in both on-chain and off-chain costs.\n* It fundamentally out-performs Optimistic Rollups (OR) in on-chain costs. Because cost is dominated by on-chain costs, it has a fundamental cost advantage over OR.\n\n**Details**\n\nThere are two sets of costs in a StarkEx system:\n\n1. On-chain costs\n2. Submitting and verifying proofs\n3. (Only In Rollup mode:) publishing data pertaining to state changes\n4. Off-chain costs: running the StarkEx cloud service, and specifically the provers\n\nIn Rollup mode, the on-chain portion is the dominating part of the cost. Note that the actual on-chain cost per Tx is much lower in ZK-Rollup solutions than in OR solutions, since the amount of data that needs to be published is much smaller.\n\nIn the bake-off, the actual on-chain costs were 94.47M, (average of 315 gas per Tx) and the off-chain costs were negligible in comparison (less than 5% of on-chain cost).\n\nAt a gas cost of 70 gwei, this cost us 6.6 ETH, which at an ETH price of $230 cost $1,518 (average on-chain cost of ¢0.5 per bake-off Tx). Naturally, the USD price fluctuates with the price of gas on Ethereum, and the price of ETH.\n\n94.5% of on-chain costs were due to operating in Rollup mode, i.e. for posting the transaction data on-chain (section 1.b above). Had we run the same in Validium mode, the on-chain costs would have been a mere 5M gas (average of under 17 gas per Tx), and would have cost 0.35 ETH, which translates to a total of $80.5 (average of ¢0.02 per bake-off Tx).\n\nOn-Chain Gas Consumption Summary:\n\n| **StarkEx**     |Cost per Batch of 300K Txs|Amortized Cost per Tx |\n|:-|:-|:-|\n|Rollup|94.47M gas | \~$1.5K|315 gas |  ¢0.5|\n|Validium|5M gas |  \~$80 |17 gas  | ¢0.02|\n\n&amp;#x200B;\n\nWith StarkEx, the verification cost grows only poly-logarithmically with respect to the batch size. This is displayed most clearly in Validium mode, where data is not posted on-chain, and thus on-chain cost scales sub-linearly (logarithmically) with batch size. Consequently, at high scale, the amortized on-chain cost of a single Tx in Validium mode goes to zero with batch size, and the off-chain cost dominates. In terms of off-chain cost, STARKs have a significant advantage over SNARK-based solutions: latest state of the art STARK provers are 20x faster than state of the art SNARK provers and this speedup is based on fundamental cryptographic reasons¹.\n\nIn general, the actual cost depends on various factors, including:\n\n1. As stated above, on the price of gas on Ethereum, and the price of ETH.\n2. System throughput (number of Tx per second): StarkEx achieves efficiency via batching, as verification cost is only logarithmic wrt the batch size. The bigger the batches, the lower the cost per Tx. Generally speaking, higher throughput lends itself to bigger batches, and thus lower average cost per Tx.\n3. Maximal latency allowed between Tx and its submission on-chain: the bigger the allowed latency, the bigger the batches, and the lower the cost per Tx. Larger latency also better enables timing proof submissions for when gas costs are lower.\n4. Data Availability solution: as mentioned above, the current bakeoff was in Rollup mode, where most of the system cost is the on-chain data availability. Running in Validium mode would have reduced the on-chain cost by a factor of 20x.\n5. Number of concurrent *competing* off-chain proof operators and mechanism of distributing proofs between them: generally speaking, if several proof operators generate proofs in parallel and compete for submitting them, the off-chain costs grow, as those operators all need to be compensated for their on-going cloud costs.\n6. Business relationship/agreement with the proof operators: if Reddit runs the proof operator itself, the off-chain costs are just the out-of-pocket costs of running the service (including prover license/usage fees). If other entity/ies provide the service, the cost could be higher.\n7. Whether the proofs contain just Reddit Txs, or are they bundled together with Txs from other applications: since batching lowers costs, bundling Reddit Txs alongside Txs from other applications into the same proofs can lower the average cost per Tx.\n8. Optimizations based on usage patterns: StarkEx contains various optimisations within each batch (e.g. bundling together different Txs that relate to the same accounts). In some cases, the usage patterns of the application benefit more from these optimisations (e.g. if in many cases, a batch contains many Txs for the same accounts, the average cost will be lower).\n\nThe cost quoted above for the bake-off can provide a decent rough cost estimate for a live system (once again, assuming on-chain data availability; otherwise they would be considerably lower). More exact estimates could be provided once we get tighter specifications for the desired system configuration.\n\nNote that the costs quoted above are the actual variable costs for running the bake-off on Mainnet. We have read various publications from competing scaling solutions quoting costs that are merely estimates, and often neglect significant parts of the actual cost structure, as typically they don’t yet have a fully functional product. As far as we know, STARK (as a cryptographic protocol) and StarkEx (our specific implementation for this use case) are significantly more efficient than other cryptographic proof systems. For example, ethSTARK, our EF-funded open-source code, is 20X faster than any other proof system we know of. This efficiency translates to a cost advantage over other alternatives, when all considerations are taken into account.\n\n## System Architecture\n\n**Highlights**\n\n* Scalability: High throughput enabled by batching transactions.\n* Integrity: Cryptographic proofs and commitments ensure true ownership of Points.\n* Accessibility: Support by leading wallets, and no on-chain operations required from users.\n\n**System Components**\n\n&amp;#x200B;\n\n*Processing img bqm0gwknctd51...*\n\n***Minting (1)***\n\nMinting is done by transferring Points from the moderator accounts to chosen users (per Reddit’s specification, users claim these Points). This is done via the Moderator API.\n\n***UX — Subscribe, Tip, and Burn (2)***\n\n*Initiating User Commands*\n\nStarkWare built a Reddit Chrome Extension (RCE) that monitors user activity on the Reddit website. The RCE catches events such as Subscribe (clicking the subreddit “JOIN” button), and Tip (adding a response starting with “/tip”), and interprets them appropriately. Whenever the RCE catches a user command, it constructs the required StarkEx transaction, and requests the user to sign it with their selected wallet. The signed transactions are passed by the RCE to the StarkEx Scalability Engine (SESE) in the cloud. StarkEx batches transactions, generates a STARK proof attesting to their integrity, and writes to Ethereum the proof, a commitment to the updated user balances data structure, and the modified user balances.\n\n*Frictionless User Experience*\n\nUsers limiting themselves to the basic Reddit Point interactions (namely: claiming Points, subscribing to a subreddit, tipping other users, and burning Points) need not interact with Ethereum, and in particular, no on-chain registration is required. Only when users choose to interact with Ethereum, e.g. to withdraw or deposit Points, do they need to register on-chain as well. On-chain registration simply means linking a user’s Ethereum address with their StarkEx account.\n\n***Wallet Support (3)***\n\n*Native Integration*\n\nSeveral wallets support the StarkEx ECDSA signature scheme and APIs, offering maximal security to their users. These wallets securely present to the user StarkEx transactions in a clear and readable format, so the user knows what they are signing. This ensures that any attempts at tampering with the message (e.g. by malware) can be detected by the user prior to signing.\n\nCurrently provided by: Ledger, Authereum, Portis, and Argent (via WalletConnect).\n\n*Standard Integration*\n\nWhere Native Integration with StarkEx has yet to be completed, we opted for Standard Integration. For the Reddit bake-off, these wallets are used strictly for the secure storage of the user’s private key. When using such a wallet, the RCE itself signs the message with the key it obtains from the wallet.\n\nCurrently provided by: MetaMask and Torus.\n\n***StarkEx Scalability Engine (4)***\n\nThe SESE runs in the cloud, and is responsible for batching transactions, generating a STARK proof attesting to their integrity, and updating a commitment (a hash) to the new state of accounts following this batch. StarkEx sends to Ethereum the STARK proof, alongside the commitment. The StarkEx smart contract system checks the proof, and if it is accepted, it stores the commitment on-chain. StarkEx accompanies each proof sent to Ethereum with the list of modified account balances verified by the proof as well (aka on-chain data availability), thus ensuring the anti-censorship mechanism described below.\n\n***StarkEx Batch Explorer (5)***\n\nThe StarkEx batch explorer connects to the SESE. It allows viewing the batches created, and the transactions in each batch. The batch explorer also displays a readable format of the modified accounts data that StarkEx puts on-chain, which the explorer reads directly from the blockchain. Note that the set of transactions displayed requires trust in the explorer, as it cannot be derived merely from observing the commitment and the modified accounts recorded on the blockchain.\n\n**Anti-Censorship Mechanism**\n\n***Serving All or No One***\n\nIn StarkEx, a user should always be able to withdraw their Points to the Ethereum blockchain, as ERC-20 coins. In the standard flow, a user sends a withdrawal request to the SESE via an off-chain API. Off-chain API service requires trust in the Operator (e.g. system availability). If a withdrawal request isn’t serviced by the Operator, the user submits a Full Withdrawal request (think of it as the equivalent of filing a complaint to a trustless party) to the StarkEx-Reddit Smart Contract. This triggers a grace period during which the Operator may submit a proof serving the withdrawal request. If that happens, the system reverts to its normal operation. Otherwise, the smart contract freezes the StarkEx system by declining to process any further updates.\n\n***Withdrawing Points from a Frozen StarkEx***\n\nWhen the system is frozen, users can claim their Points and withdraw them on-chain , by demonstrating to the smart-contract that they indeed own the claimed assets. The commitment stored on-chain is actually a Merkle tree commitment to the user balances. A user can withdraw funds directly from the contract by providing a Merkle authentication-path from their account (a leaf in the tree) to the root (the commitment kept on-chain). The *on-chain data-availability* sent with every batch processed contains the information needed to allow a user to construct such authentication paths (the data is broadcast solely for this purpose).\n\n&amp;#x200B;\n\n## Code\n\n**Proxy contract:**\n\n[https://etherscan.io/address/0x7737d2afcd437a07dc8d58792344e76b4f8e93b6#code](https://etherscan.io/address/0x7737d2afcd437a07dc8d58792344e76b4f8e93b6#code)\n\n**Implementation contract:**\n\n[https://etherscan.io/address/0x4126cf347cd0d3aa900041756329de4c319933b0#code](https://etherscan.io/address/0x4126cf347cd0d3aa900041756329de4c319933b0#code)\n\n&amp;#x200B;\n\n&amp;#x200B;\n\n&amp;#x200B;\n\n&amp;#x200B;\n\n¹ Briefly, SNARKs require computationally heavy number-theoretic cryptography while STARKs use lean (post-quantum safe) symmetric cryptography. See [this post](https://nakamoto.com/cambrian-explosion-of-crypto-proofs/) for a more detailed survey and comparison of deployed proof systems.",https://www.reddit.com/r/ethereum/comments/i02mvb/starkwares_submission_to_the_great_reddit_scaling/,1,1
i035aa,1596038422,How is Algorand going to beat ETH?,,https://www.reddit.com/r/ethereum/comments/i035aa/how_is_algorand_going_to_beat_eth/,1,0
i037q8,1596038664,Scam Or Not?,[removed],https://www.reddit.com/r/ethereum/comments/i037q8/scam_or_not/,1,0
i03e1o,1596039264,Privacy vs Convenience – Where Status differs from apps such as Signal and the refusal to use phone numbers or PIN-related features in the name of convenience,,https://www.reddit.com/r/ethereum/comments/i03e1o/privacy_vs_convenience_where_status_differs_from/,1,0
i03qcq,1596040483,Ethereum’s Adoption Rate After 5 Years Far Exceeds Bitcoin’s,,https://www.reddit.com/r/ethereum/comments/i03qcq/ethereums_adoption_rate_after_5_years_far_exceeds/,1,0
i03r6w,1596040567,When share and income on mobile Ethereum farm rate $3.00,[removed],https://www.reddit.com/r/ethereum/comments/i03r6w/when_share_and_income_on_mobile_ethereum_farm/,1,0
i042cd,1596041626,Ethereum’s Adoption Rate After 5 Years Far Exceeds Bitcoin’s,,https://www.reddit.com/r/ethereum/comments/i042cd/ethereums_adoption_rate_after_5_years_far_exceeds/,1,2
i04l6z,1596043370,MLM scams,[removed],https://www.reddit.com/r/ethereum/comments/i04l6z/mlm_scams/,1,0
i04nfg,1596043567,Should i buy ETH now before it goes up more or wait for it to dip down?,[removed],https://www.reddit.com/r/ethereum/comments/i04nfg/should_i_buy_eth_now_before_it_goes_up_more_or/,1,1
i04r7e,1596043886,Happy Birthday Ethereum! (5 yrs),,https://www.reddit.com/r/ethereum/comments/i04r7e/happy_birthday_ethereum_5_yrs/,1,15
i05696,1596045241,Is it possible to write a smart contract that locks my eth for 10 years?,[removed],https://www.reddit.com/r/ethereum/comments/i05696/is_it_possible_to_write_a_smart_contract_that/,1,11
i06irm,1596049594,"DeFi in Eth2: Cities, suburbs, and farms",,https://www.reddit.com/r/ethereum/comments/i06irm/defi_in_eth2_cities_suburbs_and_farms/,1,1
i06qz9,1596050328,Vitalik Buterin: People Are Underestimating DeFi Risks,,https://www.reddit.com/r/ethereum/comments/i06qz9/vitalik_buterin_people_are_underestimating_defi/,1,0
i06rw8,1596050411,Matic Network's Great Reddit Scaling Bake-Off submission,[removed],https://www.reddit.com/r/ethereum/comments/i06rw8/matic_networks_great_reddit_scaling_bakeoff/,1,0
i06xqw,1596050923,"Ethereum Network Usage is High Medella Testnet August 04, 2020 ETH Price Factor Has More to Work",,https://www.reddit.com/r/ethereum/comments/i06xqw/ethereum_network_usage_is_high_medella_testnet/,1,0
i078il,1596051875,What's everyone using for an Android wallet?,[removed],https://www.reddit.com/r/ethereum/comments/i078il/whats_everyone_using_for_an_android_wallet/,1,0
